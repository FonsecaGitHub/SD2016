<?xml version="1.0" encoding="UTF-8"?>

<!--
    WSDL contract for a UPA Authentication Server service

    This WSDL defines the operations provided by the Web Service,
    and should not be modified.

    For more information, consult sections
    wsdl:service, wsdl:portType, wsdl:types and wsdl:binding below

-->

<definitions
    xmlns="http://schemas.xmlsoap.org/wsdl/"
    xmlns:xs="http://www.w3.org/2001/XMLSchema"
    xmlns:xsd="http://www.w3.org/2001/XMLSchema"
    xmlns:soap="http://schemas.xmlsoap.org/wsdl/soap/"
    xmlns:wsam="http://www.w3.org/2007/05/addressing/metadata"
    xmlns:tns="http://ws.authserver.upa.pt/"
    targetNamespace="http://ws.authserver.upa.pt/"
    name="AuthenticationServerWebService">

    <types>
        <xs:schema
            targetNamespace="http://ws.authserver.upa.pt/"
            version="1.0">
            
            <xs:complexType name="certificateView">
                <xs:sequence>
                    <xs:element name="certificate" type="xs:string" minOccurs="0" />
                    <xs:element name="certificateRequest" type="xs:string" minOccurs="0" />
                    <xs:element name="keystore" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            
            <xs:complexType name="requestCertificate">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="requestCertificate" type="tns:requestCertificate" />
            
            <xs:complexType name="requestCertificateResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:certificateView" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>s
            <xs:element name="requestCertificateResponse" type="tns:requestCertificateResponse" />
            
            <xs:complexType name="requestBrokerPublicKey">
            </xs:complexType>
            <xs:element name="requestBrokerPublicKey" type="tns:requestBrokerPublicKey" />
            
            <xs:complexType name="requestBrokerPublicKeyResponse">
                <xs:sequence>
                    <xs:element name="return" type="xsd:integer" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="requestBrokerPublicKeyResponse" type="tns:requestBrokerPublicKeyResponse" />
        

            <xs:complexType name="requestTransporterPublicKey">
                <xs:sequence>
                    <xs:element name="tranporter_number" type="xs:int" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="requestTransporterPublicKey" type="tns:requestTransporterPublicKey" />
            
            <xs:complexType name="requestTransporterPublicKeyResponse">
                <xs:sequence>
                    <xs:element name="return" type="xsd:integer" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>s
            <xs:element name="requestTransporterPublicKeyResponse" type="tns:requestTransporterPublicKeyResponse" />
            
            
            <!--<xs:complexType name="jobView">
                <xs:sequence>
                    <xs:element name="companyName" type="xs:string" minOccurs="0" />
                    <xs:element name="jobIdentifier" type="xs:string" minOccurs="0" />
                    <xs:element name="jobOrigin" type="xs:string" minOccurs="0" />
                    <xs:element name="jobDestination" type="xs:string" minOccurs="0" />
                    <xs:element name="jobPrice" type="xs:int" />
                    <xs:element name="jobState" type="tns:jobStateView" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
        
            <xs:simpleType name="jobStateView">
                <xs:restriction base="xs:string">
                    <xs:enumeration value="PROPOSED" />
                    <xs:enumeration value="REJECTED" />
                    <xs:enumeration value="ACCEPTED" />
                    <xs:enumeration value="HEADING" />
                    <xs:enumeration value="ONGOING" />
                    <xs:enumeration value="COMPLETED" />
                </xs:restriction>
            </xs:simpleType>
        
        
            <xs:complexType name="ping">
                <xs:sequence>
                    <xs:element name="name" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="ping" type="tns:ping" />
        
            <xs:complexType name="pingResponse">
                <xs:sequence>
                    <xs:element name="return" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="pingResponse" type="tns:pingResponse" />
        
        
            <xs:complexType name="requestJob">
                <xs:sequence>
                    <xs:element name="origin" type="xs:string" minOccurs="0" />
                    <xs:element name="destination" type="xs:string" minOccurs="0" />
                    <xs:element name="price" type="xs:int" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="requestJob" type="tns:requestJob" />
        
            <xs:complexType name="requestJobResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:jobView" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="requestJobResponse" type="tns:requestJobResponse" />
        
        
            <xs:complexType name="decideJob">
                <xs:sequence>
                    <xs:element name="id" type="xs:string" />
                    <xs:element name="accept" type="xs:boolean" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="decideJob" type="tns:decideJob" />
        
            <xs:complexType name="decideJobResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:jobView" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="decideJobResponse" type="tns:decideJobResponse" />
        
        
            <xs:complexType name="jobStatus">
                <xs:sequence>
                    <xs:element name="id" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="jobStatus" type="tns:jobStatus" />
        
            <xs:complexType name="jobStatusResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:jobView" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="jobStatusResponse" type="tns:jobStatusResponse" />
        
        
            <xs:complexType name="listJobs">
                <xs:sequence />
            </xs:complexType>
            <xs:element name="listJobs" type="tns:listJobs" />
        
            <xs:complexType name="listJobsResponse">
                <xs:sequence>
                    <xs:element name="return" type="tns:jobView" minOccurs="0" maxOccurs="unbounded" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="listJobsResponse" type="tns:listJobsResponse" />
        
        
            <xs:complexType name="clearJobs">
                <xs:sequence />
            </xs:complexType>
            <xs:element name="clearJobs" type="tns:clearJobs" />
        
            <xs:complexType name="clearJobsResponse">
                <xs:sequence />
            </xs:complexType>
            <xs:element name="clearJobsResponse" type="tns:clearJobsResponse" />
        
        
            <xs:complexType name="BadLocationFault">
                <xs:sequence>
                    <xs:element name="location" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="BadLocationFault" type="tns:BadLocationFault" />
        
            <xs:complexType name="BadPriceFault">
                <xs:sequence>
                    <xs:element name="price" type="xs:int" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="BadPriceFault" type="tns:BadPriceFault" />
        
            <xs:complexType name="BadJobFault">
                <xs:sequence>
                    <xs:element name="id" type="xs:string" minOccurs="0" />
                </xs:sequence>
            </xs:complexType>
            <xs:element name="BadJobFault" type="tns:BadJobFault" />-->
        
        </xs:schema>
    </types>

    <!--  Messages (use elements defined in the schema) -->
    <message name="requestCertificate">
        <part name="parameters" element="tns:requestCertificate" />
    </message>
    <message name="requestCertificateResponse">
        <part name="parameters" element="tns:requestCertificateResponse"/>
    </message>
    
    <message name="requestBrokerPublicKey">
        <part name="parameters" element="tns:requestBrokerPublicKey" />
    </message>
    <message name="requestBrokerPublicKeyResponse">
        <part name="parameters" element="tns:requestBrokerPublicKeyResponse" />
    </message>
    
    <message name="requestTransporterPublicKey">
        <part name="parameters" element="tns:requestTransporterPublicKey" />
    </message>
    <message name="requestTransporterPublicKeyResponse">
        <part name="parameters" element="tns:requestTransporterPublicKeyResponse" />
    </message>

    <!--<message name="requestJob">
        <part name="parameters" element="tns:requestJob" />
    </message>
    <message name="requestJobResponse">
        <part name="parameters" element="tns:requestJobResponse" />
    </message>

    <message name="decideJob">
        <part name="parameters" element="tns:decideJob" />
    </message>
    <message name="decideJobResponse">
        <part name="parameters" element="tns:decideJobResponse" />
    </message>

    <message name="jobStatus">
        <part name="parameters" element="tns:jobStatus" />
    </message>
    <message name="jobStatusResponse">
        <part name="parameters" element="tns:jobStatusResponse" />
    </message>

    <message name="listJobs">
        <part name="parameters" element="tns:listJobs" />
    </message>
    <message name="listJobsResponse">
        <part name="parameters" element="tns:listJobsResponse" />
    </message>

    <message name="clearJobs">
        <part name="parameters" element="tns:clearJobs" />
    </message>
    <message name="clearJobsResponse">
        <part name="parameters" element="tns:clearJobsResponse" />
    </message>

    <message name="BadLocationFault">
        <part name="fault" element="tns:BadLocationFault" />
    </message>
    <message name="BadPriceFault">
        <part name="fault" element="tns:BadPriceFault" />
    </message>
    <message name="BadJobFault">
        <part name="fault" element="tns:BadJobFault" />
    </message>-->

    <!-- Port Type (Interface) -->
    <portType name="AuthenticationServerPortType">
        
        <operation name="requestCertificate">
            <input wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestCertificate"
                message="tns:requestCertificate" />
            <output wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestCertificateResponse"
                message="tns:requestCertificateResponse" />
        </operation>  
        <operation name="requestBrokerPublicKey">
            <input wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestBrokerPublicKey"
                message="tns:requestBrokerPublicKey" />
            <output wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestBrokerPublicKeyResponse"
                message="tns:requestBrokerPublicKeyResponse" />
        </operation>  
        <operation name="requestTransporterPublicKey">
            <input wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestTransporterPublicKey"
                message="tns:requestTransporterPublicKey" />
            <output wsam:Action="http://ws.authserver.upa.pt/AuthenticationServerPort/requestTransporterPublicKeyResponse"
                message="tns:requestTransporterPublicKeyResponse" />
        </operation>

        <!--<operation name="requestJob">
            <input
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/requestJobRequest"
                message="tns:requestJob" />
            <output
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/requestJobResponse"
                message="tns:requestJobResponse" />
            <fault message="tns:BadLocationFault" name="BadLocationFault"
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/requestJob/Fault/BadLocationFault" />
            <fault message="tns:BadPriceFault" name="BadPriceFault"
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/requestJob/Fault/BadPriceFault" />
        </operation>

        <operation name="decideJob">
            <input
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/decideJobRequest"
                message="tns:decideJob" />
            <output
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/decideJobResponse"
                message="tns:decideJobResponse" />
            <fault message="tns:BadJobFault" name="BadJobFault"
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/decideJob/Fault/BadJobFault" />
        </operation>

        <operation name="jobStatus">
            <input
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/jobStatusRequest"
                message="tns:jobStatus" />
            <output
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/jobStatusResponse"
                message="tns:jobStatusResponse" />
        </operation>

        <operation name="listJobs">
            <input
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/listJobsRequest"
                message="tns:listJobs" />
            <output
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/listJobsResponse"
                message="tns:listJobsResponse" />
        </operation>

        <operation name="clearJobs">
            <input
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/clearJobsRequest"
                message="tns:clearJobs" />
            <output
                wsam:Action="http://ws.transporter.upa.pt/TransporterPort/clearJobsResponse"
                message="tns:clearJobsResponse" />
        </operation>-->
    </portType>

    <!-- SOAP/HTTP Binding -->
    <binding name="AuthenticationServerPortSoapHttpBinding" type="tns:AuthenticationServerPortType">
        <soap:binding transport="http://schemas.xmlsoap.org/soap/http"
            style="document" />

        <operation name="requestCertificate">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        
        <operation name="requestBrokerPublicKey">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        
        <operation name="requestTransporterPublicKey">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>
        

    <!--<operation name="requestJob">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
            <fault name="BadLocationFault">
                <soap:fault name="BadLocationFault" use="literal" />
            </fault>
            <fault name="BadPriceFault">
                <soap:fault name="BadPriceFault" use="literal" />
            </fault>
        </operation>

        <operation name="decideJob">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
            <fault name="BadJobFault">
                <soap:fault name="BadJobFault" use="literal" />
            </fault>
        </operation>

        <operation name="jobStatus">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>

        <operation name="listJobs">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>

        <operation name="clearJobs">
            <soap:operation soapAction="" />
            <input>
                <soap:body use="literal" />
            </input>
            <output>
                <soap:body use="literal" />
            </output>
        </operation>-->
    </binding>

    <!-- Service -->
    <service name="AuthenticationServerService">
        <port name="AuthenticationServerPort" binding="tns:AuthenticationServerPortSoapHttpBinding">
            <soap:address location="http://host:port/authserver-ws/endpoint" />
        </port>
    </service>

</definitions>